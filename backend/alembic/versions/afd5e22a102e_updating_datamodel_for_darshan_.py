"""Updating datamodel for darshan functionality

Revision ID: afd5e22a102e
Revises: 6b1dad02b702
Create Date: 2025-05-31 15:50:23.626001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'afd5e22a102e'
down_revision: Union[str, None] = '6b1dad02b702'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appointment_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('attendee_name', sa.String(length=255), nullable=False),
    sa.Column('attendee_email', sa.String(length=255), nullable=True),
    sa.Column('attendee_phone', sa.String(length=50), nullable=True),
    sa.Column('relationship_to_requester', sa.Enum('SPOUSE', 'CHILD', 'PARENT', 'RELATIVE', 'FRIEND', 'OTHER', name='relationshiptype'), nullable=True),
    sa.Column('attendance_status', sa.Enum('PENDING', 'CHECKED_IN', 'CANCELLED', 'NO_SHOW', name='attendancestatus'), nullable=True),
    sa.Column('checked_in_at', sa.DateTime(), nullable=True),
    sa.Column('checked_in_by', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['checked_in_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('appointment_id', 'user_id', name='unique_appointment_user')
    )
    op.create_index('idx_appointment_users_appointment_id', 'appointment_users', ['appointment_id'], unique=False)
    op.create_index('idx_appointment_users_attendance_status', 'appointment_users', ['attendance_status'], unique=False)
    op.create_index('idx_appointment_users_user_id', 'appointment_users', ['user_id'], unique=False)
    op.create_index(op.f('ix_appointment_users_appointment_id'), 'appointment_users', ['appointment_id'], unique=False)
    op.create_index(op.f('ix_appointment_users_attendance_status'), 'appointment_users', ['attendance_status'], unique=False)
    op.create_index(op.f('ix_appointment_users_id'), 'appointment_users', ['id'], unique=False)
    op.create_index(op.f('ix_appointment_users_user_id'), 'appointment_users', ['user_id'], unique=False)
    op.create_table('calendar_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Enum('DIGNITARY_APPOINTMENT', 'DARSHAN', 'TEACHER_MEETING', 'VOLUNTEER_MEETING', 'PRIVATE_EVENT', 'PLACEHOLDER', 'TRAVEL', 'OTHER', name='eventtype'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.String(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('meeting_place_id', sa.Integer(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=True),
    sa.Column('is_open_for_booking', sa.Boolean(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='eventstatus'), nullable=True),
    sa.Column('external_calendar_id', sa.String(length=255), nullable=True),
    sa.Column('external_calendar_link', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['meeting_place_id'], ['meeting_places.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_calendar_events_datetime_type', 'calendar_events', ['start_datetime', 'event_type'], unique=False)
    op.create_index('idx_calendar_events_status_booking', 'calendar_events', ['status', 'is_open_for_booking'], unique=False)
    op.create_index(op.f('ix_calendar_events_event_type'), 'calendar_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_calendar_events_id'), 'calendar_events', ['id'], unique=False)
    op.create_index(op.f('ix_calendar_events_start_datetime'), 'calendar_events', ['start_datetime'], unique=False)
    op.create_index(op.f('ix_calendar_events_status'), 'calendar_events', ['status'], unique=False)
    op.drop_index('ix_darshan_appointments_id', table_name='darshan_appointments')
    op.drop_table('darshan_appointments')
    op.drop_index('ix_darshan_slots_id', table_name='darshan_slots')
    op.drop_table('darshan_slots')
    op.add_column('appointment_dignitaries', sa.Column('checked_in_at', sa.DateTime(), nullable=True))
    op.add_column('appointment_dignitaries', sa.Column('checked_in_by', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'appointment_dignitaries', 'users', ['checked_in_by'], ['id'])
    op.add_column('appointments', sa.Column('calendar_event_id', sa.Integer(), nullable=True))
    op.add_column('appointments', sa.Column('request_type', sa.Enum('DIGNITARY', 'DARSHAN', 'VOLUNTEER', 'OTHER', name='requesttype'), nullable=True))
    op.add_column('appointments', sa.Column('number_of_attendees', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_appointments_calendar_event_id'), 'appointments', ['calendar_event_id'], unique=False)
    op.create_index(op.f('ix_appointments_request_type'), 'appointments', ['request_type'], unique=False)
    op.create_foreign_key(None, 'appointments', 'calendar_events', ['calendar_event_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.drop_index(op.f('ix_appointments_request_type'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_calendar_event_id'), table_name='appointments')
    op.drop_column('appointments', 'number_of_attendees')
    op.drop_column('appointments', 'request_type')
    op.drop_column('appointments', 'calendar_event_id')
    op.drop_constraint(None, 'appointment_dignitaries', type_='foreignkey')
    op.drop_column('appointment_dignitaries', 'checked_in_by')
    op.drop_column('appointment_dignitaries', 'checked_in_at')
    op.create_table('darshan_slots',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('darshan_slots_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('slot_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_bookings', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='darshan_slots_created_by_fkey'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='darshan_slots_location_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='darshan_slots_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='darshan_slots_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_darshan_slots_id', 'darshan_slots', ['id'], unique=False)
    op.create_table('darshan_appointments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('requester_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('secretary_contact', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('purpose_of_meeting', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('number_of_people', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('preferred_date_from', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('preferred_date_to', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('attending_bangalore_ashram_program', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('attachment_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attachment_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attachment_file_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('assigned_darshan_slot_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'NEED_MORE_INFO', 'APPROVED', 'REJECTED', 'COMPLETED', 'CANCELLED', name='darshanappointmentstatus'), autoincrement=False, nullable=False),
    sa.Column('sub_status', postgresql.ENUM('NOT_REVIEWED', 'UNDER_REVIEW', 'AWAITING_SLOT_ASSIGNMENT', 'SLOT_ASSIGNED', 'NEED_MORE_INFO', 'LOW_PRIORITY', 'CANCELLED', name='darshanappointmentsubstatus'), autoincrement=False, nullable=True),
    sa.Column('secretariat_notes_to_requester', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('secretariat_meeting_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('secretariat_follow_up_actions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('approved_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('approved_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name='darshan_appointments_approved_by_fkey'),
    sa.ForeignKeyConstraint(['assigned_darshan_slot_id'], ['darshan_slots.id'], name='darshan_appointments_assigned_darshan_slot_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='darshan_appointments_created_by_fkey'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='darshan_appointments_location_id_fkey'),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], name='darshan_appointments_requester_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='darshan_appointments_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='darshan_appointments_pkey')
    )
    op.create_index('ix_darshan_appointments_id', 'darshan_appointments', ['id'], unique=False)
    op.drop_index(op.f('ix_calendar_events_status'), table_name='calendar_events')
    op.drop_index(op.f('ix_calendar_events_start_datetime'), table_name='calendar_events')
    op.drop_index(op.f('ix_calendar_events_id'), table_name='calendar_events')
    op.drop_index(op.f('ix_calendar_events_event_type'), table_name='calendar_events')
    op.drop_index('idx_calendar_events_status_booking', table_name='calendar_events')
    op.drop_index('idx_calendar_events_datetime_type', table_name='calendar_events')
    op.drop_table('calendar_events')
    op.drop_index(op.f('ix_appointment_users_user_id'), table_name='appointment_users')
    op.drop_index(op.f('ix_appointment_users_id'), table_name='appointment_users')
    op.drop_index(op.f('ix_appointment_users_attendance_status'), table_name='appointment_users')
    op.drop_index(op.f('ix_appointment_users_appointment_id'), table_name='appointment_users')
    op.drop_index('idx_appointment_users_user_id', table_name='appointment_users')
    op.drop_index('idx_appointment_users_attendance_status', table_name='appointment_users')
    op.drop_index('idx_appointment_users_appointment_id', table_name='appointment_users')
    op.drop_table('appointment_users')
    # ### end Alembic commands ###
